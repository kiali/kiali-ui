// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`#ServiceInfoDescription render correctly with data should render service description 1`] = `
<Grid
  gutter="md"
>
  <GridItem
    span={4}
  >
    <Card
      style={
        Object {
          "height": "100%",
        }
      }
    >
      <CardBody>
        <Title
          headingLevel="h3"
          size="2xl"
        >
           
          Service Overview
           
        </Title>
        <Stack>
          <StackItem
            id="labels"
          >
            <Text
              component="h3"
            >
               Labels 
            </Text>
            <Labels
              labels={
                Object {
                  "app": "reviews",
                }
              }
            />
          </StackItem>
          <StackItem
            id="resource_version"
          >
            <Text
              component="h3"
            >
               Resource Version 
            </Text>
            1234
          </StackItem>
          <StackItem
            id="selectors"
          >
            <Text
              component="h3"
            >
               Selectors 
            </Text>
            <Labels
              labels={Object {}}
            />
          </StackItem>
          <StackItem
            id="created_at"
          >
            <Text
              component="h3"
            >
               Created at 
            </Text>
            <LocalTime
              time="2018-04-04T15:11:46Z"
            />
          </StackItem>
        </Stack>
      </CardBody>
    </Card>
  </GridItem>
  <GridItem
    span={4}
  >
    <Card
      style={
        Object {
          "height": "100%",
        }
      }
    >
      <CardBody>
        <Title
          headingLevel="h3"
          size="2xl"
        >
           
          Graph Overview
           
        </Title>
        <div
          style={
            Object {
              "height": "100%",
            }
          }
        >
          <CytoscapeGraph
            activeNamespaces={
              Array [
                Object {
                  "name": "my-namespace",
                },
              ]
            }
            containerClassName="f1niyge3"
            dataSource={
              GraphDataSource {
                "_errorMessage": null,
                "_fetchParams": Object {
                  "duration": 0,
                  "edgeLabelMode": "noEdgeLabels",
                  "graphType": "versionedApp",
                  "injectServiceNodes": true,
                  "namespaces": Array [],
                  "showSecurity": false,
                  "showUnusedNodes": false,
                },
                "_isError": false,
                "_isLoading": false,
                "decoratedData": [Function],
                "emit": [Function],
                "eventEmitter": EventEmitter {
                  "_events": Object {},
                  "_eventsCount": 0,
                },
                "fetchDataForNamespaces": [Function],
                "fetchDataForNode": [Function],
                "fetchGraphData": [Function],
                "graphDuration": 0,
                "graphElements": Object {
                  "edges": Array [],
                  "nodes": Array [],
                },
                "graphTimestamp": 0,
                "on": [Function],
                "promiseRegistry": PromisesRegistry {
                  "promises": Map {},
                },
                "removeListener": [Function],
              }
            }
            displayUnusedNodes={[Function]}
            edgeLabelMode="noEdgeLabels"
            graphType="app"
            isMTLSEnabled={false}
            isMiniGraph={true}
            layout={
              Object {
                "fit": false,
                "name": "dagre",
                "nodeDimensionsIncludeLabels": true,
                "rankDir": "LR",
              }
            }
            refreshInterval={0}
            showCircuitBreakers={false}
            showMissingSidecars={true}
            showNodeLabels={true}
            showSecurity={false}
            showServiceNodes={true}
            showTrafficAnimation={true}
            showUnusedNodes={false}
            showVirtualServices={true}
          />
        </div>
      </CardBody>
    </Card>
  </GridItem>
  <GridItem
    span={4}
  >
    <Card
      style={
        Object {
          "height": "100%",
        }
      }
    >
      <CardBody>
        <Title
          headingLevel="h3"
          size="2xl"
        >
           
          Health Overview
           
        </Title>
        <Stack
          className="stack_service_details"
        >
          <StackItem
            id="health"
          >
            <Text
              component="h3"
            >
               Overall Health 
            </Text>
            <HealthIndicator
              id="reviews"
              mode={0}
            />
          </StackItem>
        </Stack>
        <Title
          headingLevel="h3"
          size="2xl"
          style={
            Object {
              "marginTop": "60px",
            }
          }
        >
           
          Network Overview
           
        </Title>
        <Stack>
          <StackItem
            id="ip"
          >
            <Text
              component="h3"
            >
               
              Service IP
               
            </Text>
            172.30.78.33
          </StackItem>
          <StackItem
            id="endpoints"
          >
            <Text
              component="h3"
            >
               Endpoints 
            </Text>
            <Stack>
              <StackItem
                key="endpoint_0_address_0"
              >
                <Tooltip
                  appendTo={[Function]}
                  aria="describedby"
                  boundary="window"
                  className=""
                  content={
                    <React.Fragment>
                      reviews-v2-4140793682-qrpm9
                    </React.Fragment>
                  }
                  distance={15}
                  enableFlip={true}
                  entryDelay={500}
                  exitDelay={500}
                  flipBehavior={
                    Array [
                      "top",
                      "right",
                      "bottom",
                      "left",
                      "top",
                      "right",
                      "bottom",
                    ]
                  }
                  id=""
                  isAppLauncher={false}
                  isContentLeftAligned={false}
                  isVisible={false}
                  maxWidth="18.75rem"
                  position="top"
                  tippyProps={Object {}}
                  trigger="mouseenter focus"
                  zIndex={9999}
                >
                  <span>
                    <EyeIcon
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                      title={null}
                    />
                     
                    172.17.0.11
                  </span>
                </Tooltip>
              </StackItem>
              <StackItem
                key="endpoint_0_address_1"
              >
                <Tooltip
                  appendTo={[Function]}
                  aria="describedby"
                  boundary="window"
                  className=""
                  content={
                    <React.Fragment>
                      reviews-v3-3651831602-zn9g6
                    </React.Fragment>
                  }
                  distance={15}
                  enableFlip={true}
                  entryDelay={500}
                  exitDelay={500}
                  flipBehavior={
                    Array [
                      "top",
                      "right",
                      "bottom",
                      "left",
                      "top",
                      "right",
                      "bottom",
                    ]
                  }
                  id=""
                  isAppLauncher={false}
                  isContentLeftAligned={false}
                  isVisible={false}
                  maxWidth="18.75rem"
                  position="top"
                  tippyProps={Object {}}
                  trigger="mouseenter focus"
                  zIndex={9999}
                >
                  <span>
                    <EyeIcon
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                      title={null}
                    />
                     
                    172.17.0.14
                  </span>
                </Tooltip>
              </StackItem>
              <StackItem
                key="endpoint_0_address_2"
              >
                <Tooltip
                  appendTo={[Function]}
                  aria="describedby"
                  boundary="window"
                  className=""
                  content={
                    <React.Fragment>
                      reviews-v1-401049526-tfstp
                    </React.Fragment>
                  }
                  distance={15}
                  enableFlip={true}
                  entryDelay={500}
                  exitDelay={500}
                  flipBehavior={
                    Array [
                      "top",
                      "right",
                      "bottom",
                      "left",
                      "top",
                      "right",
                      "bottom",
                    ]
                  }
                  id=""
                  isAppLauncher={false}
                  isContentLeftAligned={false}
                  isVisible={false}
                  maxWidth="18.75rem"
                  position="top"
                  tippyProps={Object {}}
                  trigger="mouseenter focus"
                  zIndex={9999}
                >
                  <span>
                    <EyeIcon
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                      title={null}
                    />
                     
                    172.17.0.16
                  </span>
                </Tooltip>
              </StackItem>
            </Stack>
          </StackItem>
          <StackItem
            id="ports"
          >
            <Text
              component="h3"
            >
              <ValidationObjectSummary
                id="reviews-config-validation"
                validations={Array []}
              />
              <span
                style={
                  Object {
                    "marginLeft": "10px",
                  }
                }
              >
                Ports
              </span>
            </Text>
            <ul
              className="fza38k8"
            />
          </StackItem>
          <StackItem
            id="type"
          >
            <Text
              component="h3"
            >
               Type 
            </Text>
            ClusterIP
          </StackItem>
        </Stack>
      </CardBody>
    </Card>
  </GridItem>
</Grid>
`;
