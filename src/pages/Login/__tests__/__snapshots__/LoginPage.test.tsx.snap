// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`#LoginPage render correctly should render LoginPage 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LoginPage
    authenticate={[MockFunction]}
    checkCredentials={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
      }
    }
    isPostLoginPerforming={false}
    status={2}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "backgroundImgAlt": "",
      "backgroundImgSrc": "",
      "brandImgAlt": "Kiali logo",
      "brandImgSrc": "logo-alt.svg",
      "children": <LoginForm
        className=""
        helperText={<UNDEFINED />}
        isLoginButtonDisabled={false}
        isRememberMeChecked={false}
        isValidPassword={true}
        isValidUsername={true}
        loginButtonLabel="Log In"
        onChangePassword={[Function]}
        onChangeRememberMe={[Function]}
        onChangeUsername={[Function]}
        onLoginButtonClick={[Function]}
        passwordLabel="Password"
        passwordValue=""
        rememberMeAriaLabel="Remember me Checkbox"
        rememberMeLabel=""
        showHelperText={true}
        style={
          Object {
            "marginTop": "10px",
          }
        }
        usernameLabel="Username"
        usernameValue=""
      />,
      "className": "",
      "footerListItems": <UNDEFINED>
        <ListItem>
          <LoginFooterItem
            className=""
            href="https://www.kiali.io/"
            target="_blank"
          >
            Documentation
          </LoginFooterItem>
        </ListItem>
        <ListItem>
          <LoginFooterItem
            className=""
            href="https://github.com/kiali/kiali"
            target="_blank"
          >
            Contribute
          </LoginFooterItem>
        </ListItem>
      </UNDEFINED>,
      "footerListVariants": "inline",
      "forgotCredentials": null,
      "loginTitle": "Log in Kiali",
      "signUpForAccountMessage": null,
      "socialMediaLoginContent": null,
      "textContent": "Service Mesh Observability.",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "className": "",
        "helperText": <UNDEFINED />,
        "isLoginButtonDisabled": false,
        "isRememberMeChecked": false,
        "isValidPassword": true,
        "isValidUsername": true,
        "loginButtonLabel": "Log In",
        "onChangePassword": [Function],
        "onChangeRememberMe": [Function],
        "onChangeUsername": [Function],
        "onLoginButtonClick": [Function],
        "passwordLabel": "Password",
        "passwordValue": "",
        "rememberMeAriaLabel": "Remember me Checkbox",
        "rememberMeLabel": "",
        "showHelperText": true,
        "style": Object {
          "marginTop": "10px",
        },
        "usernameLabel": "Username",
        "usernameValue": "",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "backgroundImgAlt": "",
        "backgroundImgSrc": "",
        "brandImgAlt": "Kiali logo",
        "brandImgSrc": "logo-alt.svg",
        "children": <LoginForm
          className=""
          helperText={<UNDEFINED />}
          isLoginButtonDisabled={false}
          isRememberMeChecked={false}
          isValidPassword={true}
          isValidUsername={true}
          loginButtonLabel="Log In"
          onChangePassword={[Function]}
          onChangeRememberMe={[Function]}
          onChangeUsername={[Function]}
          onLoginButtonClick={[Function]}
          passwordLabel="Password"
          passwordValue=""
          rememberMeAriaLabel="Remember me Checkbox"
          rememberMeLabel=""
          showHelperText={true}
          style={
            Object {
              "marginTop": "10px",
            }
          }
          usernameLabel="Username"
          usernameValue=""
        />,
        "className": "",
        "footerListItems": <UNDEFINED>
          <ListItem>
            <LoginFooterItem
              className=""
              href="https://www.kiali.io/"
              target="_blank"
            >
              Documentation
            </LoginFooterItem>
          </ListItem>
          <ListItem>
            <LoginFooterItem
              className=""
              href="https://github.com/kiali/kiali"
              target="_blank"
            >
              Contribute
            </LoginFooterItem>
          </ListItem>
        </UNDEFINED>,
        "footerListVariants": "inline",
        "forgotCredentials": null,
        "loginTitle": "Log in Kiali",
        "signUpForAccountMessage": null,
        "socialMediaLoginContent": null,
        "textContent": "Service Mesh Observability.",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "",
          "helperText": <UNDEFINED />,
          "isLoginButtonDisabled": false,
          "isRememberMeChecked": false,
          "isValidPassword": true,
          "isValidUsername": true,
          "loginButtonLabel": "Log In",
          "onChangePassword": [Function],
          "onChangeRememberMe": [Function],
          "onChangeUsername": [Function],
          "onLoginButtonClick": [Function],
          "passwordLabel": "Password",
          "passwordValue": "",
          "rememberMeAriaLabel": "Remember me Checkbox",
          "rememberMeLabel": "",
          "showHelperText": true,
          "style": Object {
            "marginTop": "10px",
          },
          "usernameLabel": "Username",
          "usernameValue": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
