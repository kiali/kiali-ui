// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WorkloadDescription should render with runtimes 1`] = `
<Grid
  gutter="md"
>
  <GridItem
    span={4}
  >
    <Card
      style={
        Object {
          "height": "100%",
        }
      }
    >
      <CardBody>
        <Title
          headingLevel="h3"
          size="2xl"
        >
           
          Workload Overview
           
        </Title>
        <Stack
          gutter="md"
          style={
            Object {
              "marginTop": "10px",
            }
          }
        >
          <StackItem
            id="labels"
          >
            <Title
              headingLevel="h6"
              size="md"
            >
               
              Labels
               
            </Title>
            <Labels
              labels={Object {}}
            />
          </StackItem>
          <StackItem
            id="type"
          >
            <Title
              headingLevel="h6"
              size="md"
            >
               Type 
            </Title>
            N/A
          </StackItem>
          <StackItem
            id="created-at"
          >
            <Title
              headingLevel="h6"
              size="md"
            >
               Created at 
            </Title>
            <LocalTime
              time=""
            />
          </StackItem>
          <StackItem
            id="resource-version"
          >
            <Title
              headingLevel="h6"
              size="md"
            >
               Resource Version 
            </Title>
          </StackItem>
          <StackItem
            id="runtimes"
          >
            <Text
              component="h3"
            >
               Runtimes
            </Text>
            <img
              alt="Vert.x"
              key="logo-0"
              src="vertx-logo.png"
              title="Vert.x"
            />
            <span
              key="sep"
            >
               | 
            </span>
            <span
              key="logo-1"
            >
              42
            </span>
          </StackItem>
        </Stack>
      </CardBody>
    </Card>
  </GridItem>
  <GridItem
    span={4}
  >
    <Card
      style={
        Object {
          "height": "100%",
        }
      }
    >
      <CardBody>
        <Title
          headingLevel="h3"
          size="2xl"
        >
           
          Graph Overview
           
        </Title>
        <div
          style={
            Object {
              "height": "300px",
            }
          }
        >
          <CytoscapeGraph
            activeNamespaces={
              Array [
                Object {
                  "name": "my-namespace",
                },
              ]
            }
            containerClassName="f1niyge3"
            dataSource={
              GraphDataSource {
                "_errorMessage": null,
                "_fetchParams": Object {
                  "duration": 0,
                  "edgeLabelMode": "noEdgeLabels",
                  "graphType": "versionedApp",
                  "injectServiceNodes": true,
                  "namespaces": Array [],
                  "showSecurity": false,
                  "showUnusedNodes": false,
                },
                "_isError": false,
                "_isLoading": false,
                "decoratedData": [Function],
                "emit": [Function],
                "eventEmitter": EventEmitter {
                  "_events": Object {},
                  "_eventsCount": 0,
                },
                "fetchDataForNamespaces": [Function],
                "fetchDataForNode": [Function],
                "fetchGraphData": [Function],
                "graphDuration": 0,
                "graphElements": Object {
                  "edges": Array [],
                  "nodes": Array [],
                },
                "graphTimestamp": 0,
                "on": [Function],
                "promiseRegistry": PromisesRegistry {
                  "promises": Map {},
                },
                "removeListener": [Function],
              }
            }
            displayUnusedNodes={[Function]}
            edgeLabelMode="noEdgeLabels"
            graphType="app"
            isMTLSEnabled={false}
            isMiniGraph={true}
            layout={
              Object {
                "fit": false,
                "name": "dagre",
                "nodeDimensionsIncludeLabels": true,
                "rankDir": "LR",
              }
            }
            refreshInterval={0}
            showCircuitBreakers={false}
            showMissingSidecars={true}
            showNodeLabels={true}
            showSecurity={false}
            showServiceNodes={true}
            showTrafficAnimation={true}
            showUnusedNodes={false}
            showVirtualServices={true}
          />
        </div>
      </CardBody>
    </Card>
  </GridItem>
  <GridItem
    span={4}
  >
    <Card
      style={
        Object {
          "height": "100%",
        }
      }
    >
      <CardBody>
        <Title
          headingLevel="h3"
          size="2xl"
        >
           
          Health Overview
           
        </Title>
        <Stack
          gutter="md"
          style={
            Object {
              "marginTop": "10px",
            }
          }
        >
          <StackItem
            className="stack_service_details"
            id="health"
          >
            <Title
              headingLevel="h6"
              size="md"
            >
               Overall Health
            </Title>
            <HealthIndicator
              id=""
              mode={0}
              tooltipPlacement="left"
            />
          </StackItem>
        </Stack>
      </CardBody>
    </Card>
  </GridItem>
</Grid>
`;
