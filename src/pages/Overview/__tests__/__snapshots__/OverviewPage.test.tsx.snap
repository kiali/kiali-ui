// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Overview page renders initial layout 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <OverviewPage />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Breadcrumb
          title={true}
>
          <BreadcrumbItem
                    active={true}
          >
                    Namespaces
          </BreadcrumbItem>
</Breadcrumb>,
        <Connect(OverviewToolbar)
          onError={[Function]}
          onRefresh={[Function]}
          sort={[Function]}
/>,
        <div
          className="cards-pf"
>
          <CardGrid
                    className=""
                    matchHeight={true}
          >
                    <Row
                              bsClass="row"
                              componentClass="div"
                              style={
                                        Object {
                                                  "marginBottom": "20px",
                                                  "marginTop": "20px",
                                                }
                              }
                    >
                              
                    </Row>
          </CardGrid>
</div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <BreadcrumbItem
            active={true}
>
            Namespaces
</BreadcrumbItem>,
          "title": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "active": true,
            "children": "Namespaces",
          },
          "ref": null,
          "rendered": "Namespaces",
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "onError": [Function],
          "onRefresh": [Function],
          "sort": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <CardGrid
            className=""
            matchHeight={true}
>
            <Row
                        bsClass="row"
                        componentClass="div"
                        style={
                                    Object {
                                                "marginBottom": "20px",
                                                "marginTop": "20px",
                                              }
                        }
            >
                        
            </Row>
</CardGrid>,
          "className": "cards-pf",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Row
              bsClass="row"
              componentClass="div"
              style={
                            Object {
                                          "marginBottom": "20px",
                                          "marginTop": "20px",
                                        }
              }
>
              
</Row>,
            "className": "",
            "matchHeight": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "row",
              "children": Array [],
              "componentClass": "div",
              "style": Object {
                "marginBottom": "20px",
                "marginTop": "20px",
              },
            },
            "ref": null,
            "rendered": Array [],
            "type": [Function],
          },
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Breadcrumb
            title={true}
>
            <BreadcrumbItem
                        active={true}
            >
                        Namespaces
            </BreadcrumbItem>
</Breadcrumb>,
          <Connect(OverviewToolbar)
            onError={[Function]}
            onRefresh={[Function]}
            sort={[Function]}
/>,
          <div
            className="cards-pf"
>
            <CardGrid
                        className=""
                        matchHeight={true}
            >
                        <Row
                                    bsClass="row"
                                    componentClass="div"
                                    style={
                                                Object {
                                                            "marginBottom": "20px",
                                                            "marginTop": "20px",
                                                          }
                                    }
                        >
                                    
                        </Row>
            </CardGrid>
</div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <BreadcrumbItem
              active={true}
>
              Namespaces
</BreadcrumbItem>,
            "title": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "active": true,
              "children": "Namespaces",
            },
            "ref": null,
            "rendered": "Namespaces",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "onError": [Function],
            "onRefresh": [Function],
            "sort": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <CardGrid
              className=""
              matchHeight={true}
>
              <Row
                            bsClass="row"
                            componentClass="div"
                            style={
                                          Object {
                                                        "marginBottom": "20px",
                                                        "marginTop": "20px",
                                                      }
                            }
              >
                            
              </Row>
</CardGrid>,
            "className": "cards-pf",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Row
                bsClass="row"
                componentClass="div"
                style={
                                Object {
                                                "marginBottom": "20px",
                                                "marginTop": "20px",
                                              }
                }
>
                
</Row>,
              "className": "",
              "matchHeight": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "row",
                "children": Array [],
                "componentClass": "div",
                "style": Object {
                  "marginBottom": "20px",
                  "marginTop": "20px",
                },
              },
              "ref": null,
              "rendered": Array [],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
