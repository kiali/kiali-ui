// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GraphLegend test should render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GraphLegend
    closeLegend={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "allowAnyClick": false,
      "axis": "both",
      "bounds": false,
      "cancel": null,
      "children": <Card
        accented={true}
        aggregated={false}
        aggregatedMini={false}
        cardRef={null}
        className="f1yemdoz"
        matchHeight={false}
      >
        <CardHeading
          className=""
        >
          <Icon
            aria-hidden="true"
            name="close"
            onClick={[MockFunction]}
            style={
              Object {
                "float": "right",
              }
            }
            type="pf"
          />
          <CardTitle
            className=""
          >
            Traffic Legend
          </CardTitle>
        </CardHeading>
        <CardBody
          className=""
        >
          <Arrow
            color="#cc0000"
            dashed={false}
            label="Over 10% Error"
          />
          <Arrow
            color="#ec7a08"
            dashed={false}
            label="5 - 10% Error"
          />
          <Arrow
            color="#3f9c35"
            dashed={false}
            label="< 5% Error"
          />
          <Arrow
            color="#030303"
            dashed={false}
            label="Idle"
          />
          <Arrow
            color="#030303"
            dashed={true}
            label="No Traffic yet"
          />
        </CardBody>
      </Card>,
      "defaultClassName": "react-draggable",
      "defaultClassNameDragged": "react-draggable-dragged",
      "defaultClassNameDragging": "react-draggable-dragging",
      "defaultPosition": Object {
        "x": 20,
        "y": 600,
      },
      "disabled": false,
      "enableUserSelectHack": true,
      "grid": null,
      "handle": null,
      "offsetParent": null,
      "onDrag": [Function],
      "onMouseDown": [Function],
      "onStart": [Function],
      "onStop": [Function],
      "position": null,
      "transform": null,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "accented": true,
        "aggregated": false,
        "aggregatedMini": false,
        "cardRef": null,
        "children": Array [
          <CardHeading
            className=""
          >
            <Icon
              aria-hidden="true"
              name="close"
              onClick={[MockFunction]}
              style={
                Object {
                  "float": "right",
                }
              }
              type="pf"
            />
            <CardTitle
              className=""
            >
              Traffic Legend
            </CardTitle>
          </CardHeading>,
          <CardBody
            className=""
          >
            <Arrow
              color="#cc0000"
              dashed={false}
              label="Over 10% Error"
            />
            <Arrow
              color="#ec7a08"
              dashed={false}
              label="5 - 10% Error"
            />
            <Arrow
              color="#3f9c35"
              dashed={false}
              label="< 5% Error"
            />
            <Arrow
              color="#030303"
              dashed={false}
              label="Idle"
            />
            <Arrow
              color="#030303"
              dashed={true}
              label="No Traffic yet"
            />
          </CardBody>,
        ],
        "className": "f1yemdoz",
        "matchHeight": false,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Icon
                aria-hidden="true"
                name="close"
                onClick={[MockFunction]}
                style={
                  Object {
                    "float": "right",
                  }
                }
                type="pf"
              />,
              <CardTitle
                className=""
              >
                Traffic Legend
              </CardTitle>,
            ],
            "className": "",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "aria-hidden": "true",
                "name": "close",
                "onClick": [MockFunction],
                "style": Object {
                  "float": "right",
                },
                "type": "pf",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Traffic Legend",
                "className": "",
              },
              "ref": null,
              "rendered": "Traffic Legend",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Arrow
                color="#cc0000"
                dashed={false}
                label="Over 10% Error"
              />,
              <Arrow
                color="#ec7a08"
                dashed={false}
                label="5 - 10% Error"
              />,
              <Arrow
                color="#3f9c35"
                dashed={false}
                label="< 5% Error"
              />,
              <Arrow
                color="#030303"
                dashed={false}
                label="Idle"
              />,
              <Arrow
                color="#030303"
                dashed={true}
                label="No Traffic yet"
              />,
            ],
            "className": "",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "color": "#cc0000",
                "dashed": false,
                "label": "Over 10% Error",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "color": "#ec7a08",
                "dashed": false,
                "label": "5 - 10% Error",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "color": "#3f9c35",
                "dashed": false,
                "label": "< 5% Error",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "color": "#030303",
                "dashed": false,
                "label": "Idle",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "color": "#030303",
                "dashed": true,
                "label": "No Traffic yet",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "allowAnyClick": false,
        "axis": "both",
        "bounds": false,
        "cancel": null,
        "children": <Card
          accented={true}
          aggregated={false}
          aggregatedMini={false}
          cardRef={null}
          className="f1yemdoz"
          matchHeight={false}
        >
          <CardHeading
            className=""
          >
            <Icon
              aria-hidden="true"
              name="close"
              onClick={[MockFunction]}
              style={
                Object {
                  "float": "right",
                }
              }
              type="pf"
            />
            <CardTitle
              className=""
            >
              Traffic Legend
            </CardTitle>
          </CardHeading>
          <CardBody
            className=""
          >
            <Arrow
              color="#cc0000"
              dashed={false}
              label="Over 10% Error"
            />
            <Arrow
              color="#ec7a08"
              dashed={false}
              label="5 - 10% Error"
            />
            <Arrow
              color="#3f9c35"
              dashed={false}
              label="< 5% Error"
            />
            <Arrow
              color="#030303"
              dashed={false}
              label="Idle"
            />
            <Arrow
              color="#030303"
              dashed={true}
              label="No Traffic yet"
            />
          </CardBody>
        </Card>,
        "defaultClassName": "react-draggable",
        "defaultClassNameDragged": "react-draggable-dragged",
        "defaultClassNameDragging": "react-draggable-dragging",
        "defaultPosition": Object {
          "x": 20,
          "y": 600,
        },
        "disabled": false,
        "enableUserSelectHack": true,
        "grid": null,
        "handle": null,
        "offsetParent": null,
        "onDrag": [Function],
        "onMouseDown": [Function],
        "onStart": [Function],
        "onStop": [Function],
        "position": null,
        "transform": null,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "accented": true,
          "aggregated": false,
          "aggregatedMini": false,
          "cardRef": null,
          "children": Array [
            <CardHeading
              className=""
            >
              <Icon
                aria-hidden="true"
                name="close"
                onClick={[MockFunction]}
                style={
                  Object {
                    "float": "right",
                  }
                }
                type="pf"
              />
              <CardTitle
                className=""
              >
                Traffic Legend
              </CardTitle>
            </CardHeading>,
            <CardBody
              className=""
            >
              <Arrow
                color="#cc0000"
                dashed={false}
                label="Over 10% Error"
              />
              <Arrow
                color="#ec7a08"
                dashed={false}
                label="5 - 10% Error"
              />
              <Arrow
                color="#3f9c35"
                dashed={false}
                label="< 5% Error"
              />
              <Arrow
                color="#030303"
                dashed={false}
                label="Idle"
              />
              <Arrow
                color="#030303"
                dashed={true}
                label="No Traffic yet"
              />
            </CardBody>,
          ],
          "className": "f1yemdoz",
          "matchHeight": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Icon
                  aria-hidden="true"
                  name="close"
                  onClick={[MockFunction]}
                  style={
                    Object {
                      "float": "right",
                    }
                  }
                  type="pf"
                />,
                <CardTitle
                  className=""
                >
                  Traffic Legend
                </CardTitle>,
              ],
              "className": "",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "aria-hidden": "true",
                  "name": "close",
                  "onClick": [MockFunction],
                  "style": Object {
                    "float": "right",
                  },
                  "type": "pf",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Traffic Legend",
                  "className": "",
                },
                "ref": null,
                "rendered": "Traffic Legend",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Arrow
                  color="#cc0000"
                  dashed={false}
                  label="Over 10% Error"
                />,
                <Arrow
                  color="#ec7a08"
                  dashed={false}
                  label="5 - 10% Error"
                />,
                <Arrow
                  color="#3f9c35"
                  dashed={false}
                  label="< 5% Error"
                />,
                <Arrow
                  color="#030303"
                  dashed={false}
                  label="Idle"
                />,
                <Arrow
                  color="#030303"
                  dashed={true}
                  label="No Traffic yet"
                />,
              ],
              "className": "",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "color": "#cc0000",
                  "dashed": false,
                  "label": "Over 10% Error",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "color": "#ec7a08",
                  "dashed": false,
                  "label": "5 - 10% Error",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "color": "#3f9c35",
                  "dashed": false,
                  "label": "< 5% Error",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "color": "#030303",
                  "dashed": false,
                  "label": "Idle",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "color": "#030303",
                  "dashed": true,
                  "label": "No Traffic yet",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
