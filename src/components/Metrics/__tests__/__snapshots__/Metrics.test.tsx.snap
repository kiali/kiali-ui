// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Inbound Metrics for a workload renders initial layout 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Provider
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
  >
    <Metrics
      direction={0}
      grafanaInfo={
        Object {
          "serviceDashboardPath": "/dashboard/db/istio-dashboard",
          "url": "http://172.30.139.113:3000",
          "varNamespace": "var-namespace",
          "varService": "var-service",
          "varWorkload": "var-workload",
          "workloadDashboardPath": "/dashboard/db/istio-dashboard",
        }
      }
      isPageVisible={true}
      namespace="ns"
      object="svc"
      objectType={1}
    />
  </Provider>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "direction": 0,
      "grafanaInfo": Object {
        "serviceDashboardPath": "/dashboard/db/istio-dashboard",
        "url": "http://172.30.139.113:3000",
        "varNamespace": "var-namespace",
        "varService": "var-service",
        "varWorkload": "var-workload",
        "workloadDashboardPath": "/dashboard/db/istio-dashboard",
      },
      "isPageVisible": true,
      "namespace": "ns",
      "object": "svc",
      "objectType": 1,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "direction": 0,
        "grafanaInfo": Object {
          "serviceDashboardPath": "/dashboard/db/istio-dashboard",
          "url": "http://172.30.139.113:3000",
          "varNamespace": "var-namespace",
          "varService": "var-service",
          "varWorkload": "var-workload",
          "workloadDashboardPath": "/dashboard/db/istio-dashboard",
        },
        "isPageVisible": true,
        "namespace": "ns",
        "object": "svc",
        "objectType": 1,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Metrics for a service renders initial layout 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Provider
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
  >
    <Metrics
      direction={0}
      grafanaInfo={
        Object {
          "serviceDashboardPath": "/dashboard/db/istio-dashboard",
          "url": "http://172.30.139.113:3000",
          "varNamespace": "var-namespace",
          "varService": "var-service",
          "varWorkload": "var-workload",
          "workloadDashboardPath": "/dashboard/db/istio-dashboard",
        }
      }
      isPageVisible={true}
      namespace="ns"
      object="svc"
      objectType={0}
    />
  </Provider>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "direction": 0,
      "grafanaInfo": Object {
        "serviceDashboardPath": "/dashboard/db/istio-dashboard",
        "url": "http://172.30.139.113:3000",
        "varNamespace": "var-namespace",
        "varService": "var-service",
        "varWorkload": "var-workload",
        "workloadDashboardPath": "/dashboard/db/istio-dashboard",
      },
      "isPageVisible": true,
      "namespace": "ns",
      "object": "svc",
      "objectType": 0,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "direction": 0,
        "grafanaInfo": Object {
          "serviceDashboardPath": "/dashboard/db/istio-dashboard",
          "url": "http://172.30.139.113:3000",
          "varNamespace": "var-namespace",
          "varService": "var-service",
          "varWorkload": "var-workload",
          "workloadDashboardPath": "/dashboard/db/istio-dashboard",
        },
        "isPageVisible": true,
        "namespace": "ns",
        "object": "svc",
        "objectType": 0,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Outbound Metrics for a workload renders initial layout 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Provider
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
  >
    <Metrics
      direction={0}
      grafanaInfo={
        Object {
          "serviceDashboardPath": "/dashboard/db/istio-dashboard",
          "url": "http://172.30.139.113:3000",
          "varNamespace": "var-namespace",
          "varService": "var-service",
          "varWorkload": "var-workload",
          "workloadDashboardPath": "/dashboard/db/istio-dashboard",
        }
      }
      isPageVisible={true}
      namespace="ns"
      object="svc"
      objectType={1}
    />
  </Provider>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "direction": 0,
      "grafanaInfo": Object {
        "serviceDashboardPath": "/dashboard/db/istio-dashboard",
        "url": "http://172.30.139.113:3000",
        "varNamespace": "var-namespace",
        "varService": "var-service",
        "varWorkload": "var-workload",
        "workloadDashboardPath": "/dashboard/db/istio-dashboard",
      },
      "isPageVisible": true,
      "namespace": "ns",
      "object": "svc",
      "objectType": 1,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "direction": 0,
        "grafanaInfo": Object {
          "serviceDashboardPath": "/dashboard/db/istio-dashboard",
          "url": "http://172.30.139.113:3000",
          "varNamespace": "var-namespace",
          "varService": "var-service",
          "varWorkload": "var-workload",
          "workloadDashboardPath": "/dashboard/db/istio-dashboard",
        },
        "isPageVisible": true,
        "namespace": "ns",
        "object": "svc",
        "objectType": 1,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
