// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NamespaceDropdown renders ServiceDropdown correctly without custom 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ServiceDropdown
    activeNamespace=""
    disabled={false}
    items={Array []}
    refresh={[MockFunction]}
    service=""
    setService={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <ToolbarDropdown
        disabled={true}
        handleSelect={[MockFunction]}
        id="namespace-selector"
        label="Choose a namespace"
        onToggle={[Function]}
        options={Object {}}
        useName={true}
        value=""
      />,
      "style": Object {
        "marginLeft": "10px",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "disabled": true,
        "handleSelect": [MockFunction],
        "id": "namespace-selector",
        "label": "Choose a namespace",
        "onToggle": [Function],
        "options": Object {},
        "useName": true,
        "value": "",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "span",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <ToolbarDropdown
          disabled={true}
          handleSelect={[MockFunction]}
          id="namespace-selector"
          label="Choose a namespace"
          onToggle={[Function]}
          options={Object {}}
          useName={true}
          value=""
        />,
        "style": Object {
          "marginLeft": "10px",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "disabled": true,
          "handleSelect": [MockFunction],
          "id": "namespace-selector",
          "label": "Choose a namespace",
          "onToggle": [Function],
          "options": Object {},
          "useName": true,
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "span",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
