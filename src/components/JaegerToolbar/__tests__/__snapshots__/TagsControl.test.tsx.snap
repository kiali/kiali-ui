// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TagsControls renders TagsControl correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TagsControl
    fetching={false}
    onChange={[MockFunction]}
    tags=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "bsClass": "form-group",
      "children": Array [
        <Col
          bsClass="col"
          componentClass={[Function]}
        >
          Tags
          <FieldLevelHelp
            buttonClass=""
            close={undefined}
            content={
              <Card
                accented={false}
                aggregated={false}
                aggregatedMini={false}
                cardRef={null}
                className=""
                matchHeight={false}
              >
                <CardTitle
                  className=""
                >
                  Values should be in the
                   
                  <a
                    href="https://brandur.org/logfmt"
                    target="_blank"
                  >
                    logfmt
                  </a>
                   
                  format.
                </CardTitle>
                <CardBody
                  className=""
                >
                  <ul>
                    <li>
                      Use space for conjunctions
                    </li>
                    <li>
                      Values containing whitespace should be enclosed in quotes
                    </li>
                  </ul>
                </CardBody>
                <CardFooter
                  className=""
                >
                  <code>
                    error=true db.statement="select * from User"
                  </code>
                </CardFooter>
              </Card>
            }
            placement="bottom"
            rootClose={true}
          />
        </Col>,
        <FormControl
          bsClass="form-control"
          componentClass="input"
          defaultValue=""
          disabled={false}
          onChange={[Function]}
          placeholder="e.g. http.status_code=200 error=true"
          style={
            Object {
              "marginLeft": "10px",
              "width": "400px",
            }
          }
          type="text"
        />,
      ],
      "style": Object {
        "display": "inline-flex",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "col",
          "children": Array [
            "Tags",
            <FieldLevelHelp
              buttonClass=""
              close={undefined}
              content={
                <Card
                  accented={false}
                  aggregated={false}
                  aggregatedMini={false}
                  cardRef={null}
                  className=""
                  matchHeight={false}
                >
                  <CardTitle
                    className=""
                  >
                    Values should be in the
                     
                    <a
                      href="https://brandur.org/logfmt"
                      target="_blank"
                    >
                      logfmt
                    </a>
                     
                    format.
                  </CardTitle>
                  <CardBody
                    className=""
                  >
                    <ul>
                      <li>
                        Use space for conjunctions
                      </li>
                      <li>
                        Values containing whitespace should be enclosed in quotes
                      </li>
                    </ul>
                  </CardBody>
                  <CardFooter
                    className=""
                  >
                    <code>
                      error=true db.statement="select * from User"
                    </code>
                  </CardFooter>
                </Card>
              }
              placement="bottom"
              rootClose={true}
            />,
          ],
          "componentClass": [Function],
        },
        "ref": null,
        "rendered": Array [
          "Tags",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "buttonClass": "",
              "children": null,
              "close": undefined,
              "content": <Card
                accented={false}
                aggregated={false}
                aggregatedMini={false}
                cardRef={null}
                className=""
                matchHeight={false}
              >
                <CardTitle
                  className=""
                >
                  Values should be in the
                   
                  <a
                    href="https://brandur.org/logfmt"
                    target="_blank"
                  >
                    logfmt
                  </a>
                   
                  format.
                </CardTitle>
                <CardBody
                  className=""
                >
                  <ul>
                    <li>
                      Use space for conjunctions
                    </li>
                    <li>
                      Values containing whitespace should be enclosed in quotes
                    </li>
                  </ul>
                </CardBody>
                <CardFooter
                  className=""
                >
                  <code>
                    error=true db.statement="select * from User"
                  </code>
                </CardFooter>
              </Card>,
              "placement": "bottom",
              "rootClose": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "form-control",
          "componentClass": "input",
          "defaultValue": "",
          "disabled": false,
          "onChange": [Function],
          "placeholder": "e.g. http.status_code=200 error=true",
          "style": Object {
            "marginLeft": "10px",
            "width": "400px",
          },
          "type": "text",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "bsClass": "form-group",
        "children": Array [
          <Col
            bsClass="col"
            componentClass={[Function]}
          >
            Tags
            <FieldLevelHelp
              buttonClass=""
              close={undefined}
              content={
                <Card
                  accented={false}
                  aggregated={false}
                  aggregatedMini={false}
                  cardRef={null}
                  className=""
                  matchHeight={false}
                >
                  <CardTitle
                    className=""
                  >
                    Values should be in the
                     
                    <a
                      href="https://brandur.org/logfmt"
                      target="_blank"
                    >
                      logfmt
                    </a>
                     
                    format.
                  </CardTitle>
                  <CardBody
                    className=""
                  >
                    <ul>
                      <li>
                        Use space for conjunctions
                      </li>
                      <li>
                        Values containing whitespace should be enclosed in quotes
                      </li>
                    </ul>
                  </CardBody>
                  <CardFooter
                    className=""
                  >
                    <code>
                      error=true db.statement="select * from User"
                    </code>
                  </CardFooter>
                </Card>
              }
              placement="bottom"
              rootClose={true}
            />
          </Col>,
          <FormControl
            bsClass="form-control"
            componentClass="input"
            defaultValue=""
            disabled={false}
            onChange={[Function]}
            placeholder="e.g. http.status_code=200 error=true"
            style={
              Object {
                "marginLeft": "10px",
                "width": "400px",
              }
            }
            type="text"
          />,
        ],
        "style": Object {
          "display": "inline-flex",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "col",
            "children": Array [
              "Tags",
              <FieldLevelHelp
                buttonClass=""
                close={undefined}
                content={
                  <Card
                    accented={false}
                    aggregated={false}
                    aggregatedMini={false}
                    cardRef={null}
                    className=""
                    matchHeight={false}
                  >
                    <CardTitle
                      className=""
                    >
                      Values should be in the
                       
                      <a
                        href="https://brandur.org/logfmt"
                        target="_blank"
                      >
                        logfmt
                      </a>
                       
                      format.
                    </CardTitle>
                    <CardBody
                      className=""
                    >
                      <ul>
                        <li>
                          Use space for conjunctions
                        </li>
                        <li>
                          Values containing whitespace should be enclosed in quotes
                        </li>
                      </ul>
                    </CardBody>
                    <CardFooter
                      className=""
                    >
                      <code>
                        error=true db.statement="select * from User"
                      </code>
                    </CardFooter>
                  </Card>
                }
                placement="bottom"
                rootClose={true}
              />,
            ],
            "componentClass": [Function],
          },
          "ref": null,
          "rendered": Array [
            "Tags",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "buttonClass": "",
                "children": null,
                "close": undefined,
                "content": <Card
                  accented={false}
                  aggregated={false}
                  aggregatedMini={false}
                  cardRef={null}
                  className=""
                  matchHeight={false}
                >
                  <CardTitle
                    className=""
                  >
                    Values should be in the
                     
                    <a
                      href="https://brandur.org/logfmt"
                      target="_blank"
                    >
                      logfmt
                    </a>
                     
                    format.
                  </CardTitle>
                  <CardBody
                    className=""
                  >
                    <ul>
                      <li>
                        Use space for conjunctions
                      </li>
                      <li>
                        Values containing whitespace should be enclosed in quotes
                      </li>
                    </ul>
                  </CardBody>
                  <CardFooter
                    className=""
                  >
                    <code>
                      error=true db.statement="select * from User"
                    </code>
                  </CardFooter>
                </Card>,
                "placement": "bottom",
                "rootClose": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "form-control",
            "componentClass": "input",
            "defaultValue": "",
            "disabled": false,
            "onChange": [Function],
            "placeholder": "e.g. http.status_code=200 error=true",
            "style": Object {
              "marginLeft": "10px",
              "width": "400px",
            },
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
